defaults:
  - _self_
  - task: victor_multimodal_real

name: train_victor_multimodal_diffusion_transformer
_target_: diffusion_policy.workspace.train_diffusion_transformer_hybrid_workspace.TrainDiffusionTransformerHybridWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "victor_multimodal_joint_image_force"

# Training horizon and observation setup
horizon: 16
n_obs_steps: 2
n_action_steps: 8
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
past_action_visible: False
keypoint_visible_rate: 1.0
obs_as_cond: True

policy:
  _target_: diffusion_policy.policy.diffusion_transformer_hybrid_image_policy.DiffusionTransformerHybridImagePolicy

  shape_meta: ${shape_meta}
  
  # Multi-modal observation encoder
  obs_encoder:
    _target_: diffusion_policy.model.vision.forceful_obs_encoder.MultiModalEncoder
    shape_meta: ${shape_meta}
    fusion_mode: 'modality-attention'  # Options: 'concat', 'mlp', 'modality-attention'
    num_heads: 4
    position_encoding: 'learned'
    
    # Force/wrench encoder configuration
    wrench_encoder_cfg:
      _target_: diffusion_policy.model.wrench.model_getter.get_wrench_encoder
      name: "lstm"
      input_dim: 6  # 3 force + 3 torque dimensions
      hidden_dim: 64
      num_layers: 2
  
  noise_scheduler:
    _target_: diffusers.schedulers.scheduling_ddim.DDIMScheduler
    num_train_timesteps: 100
    beta_start: 0.0001
    beta_end: 0.02
    beta_schedule: squaredcos_cap_v2
    clip_sample: True
    set_alpha_to_one: True
    steps_offset: 0
    prediction_type: epsilon

  horizon: ${horizon}
  n_action_steps: ${eval:'${n_action_steps}+${n_latency_steps}'}
  n_obs_steps: ${n_obs_steps}
  num_inference_steps: 8

  # Vision processing parameters
  crop_shape: [216, 288]  # Crop size for images
  obs_encoder_group_norm: True
  eval_fixed_crop: True

  # Transformer architecture
  n_layer: 8
  n_cond_layers: 0
  n_head: 4
  n_emb: 256
  p_drop_emb: 0.0
  p_drop_attn: 0.3
  causal_attn: True
  time_as_cond: True
  obs_as_cond: ${obs_as_cond}

ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

dataloader:
  batch_size: 32  # Reduced batch size for multi-modal training
  num_workers: 6
  shuffle: True
  pin_memory: True
  persistent_workers: True

val_dataloader:
  batch_size: 32
  num_workers: 6
  shuffle: False
  pin_memory: True
  persistent_workers: True

optimizer:
  transformer_weight_decay: 1.0e-3
  obs_encoder_weight_decay: 1.0e-6
  learning_rate: 5.0e-5  # Lower learning rate for multi-modal
  betas: [0.9, 0.95]

training:
  device: "cuda:0"
  seed: 42
  debug: False
  resume: True
  # optimization
  lr_scheduler: cosine
  lr_warmup_steps: 500
  num_epochs: 800  # More epochs for multi-modal convergence
  gradient_accumulate_every: 1
  use_ema: True
  # training loop control
  rollout_every: 50
  checkpoint_every: 50
  val_every: 1
  sample_every: 5
  max_train_steps: null
  max_val_steps: null
  tqdm_interval_sec: 1.0

# Data augmentation for wrench data
data_augmentation:
  wrench:
    enabled: True
    noise_scale: 0.02
    mode: 'topk'  # 'all' or 'topk'
    k: 5
    sampling_rate: 200

logging:
  project: diffusion_policy_victor_multimodal
  resume: True
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  tags: ["${name}", "${task_name}", "${exp_name}", "multimodal", "joint_image_force"]
  id: null
  group: null

checkpoint:
  topk:
    monitor_key: train_loss
    mode: min
    k: 5
    format_str: 'epoch={epoch:04d}-train_loss={train_loss:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
